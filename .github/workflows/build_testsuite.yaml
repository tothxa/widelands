name: build - testsuite
on:
  workflow_call:

jobs:
  testsuite:
    strategy:
      fail-fast: false
      matrix:
        # We test the two newest and the two oldest versions of each of the two compilers
        config: [Debug, Release]
        os: [ubuntu-22.04]
        compiler: [clang-15, clang-14, g++-12, g++-11]
        include:
          # Some compilers need an older ubuntu version to run correctly
          - compiler: g++-7
            os: ubuntu-20.04
            config: Debug
          - compiler: g++-7
            os: ubuntu-20.04
            config: Release
          - compiler: g++-8
            os: ubuntu-20.04
            config: Debug
          - compiler: g++-8
            os: ubuntu-20.04
            config: Release
          - compiler: clang-8
            os: ubuntu-20.04
            config: Debug
          - compiler: clang-8
            os: ubuntu-20.04
            config: Release
          - compiler: clang-7
            os: ubuntu-20.04
            config: Debug
          - compiler: clang-7
            os: ubuntu-20.04
            config: Release
    runs-on: ${{ matrix.os }}
    env:
      SDL_VIDEODRIVER: 'x11'
      DISPLAY: ':99.0'
      # TODO: Under Xvfb, the usual X11 memory leaks show up as an unsymbolized
      # <unknown module> making them impossible to suppress. So we disable all
      # memory leaks checking in the testsuite for now.
      ASAN_OPTIONS: 'detect_leaks=0'
      LSAN_OPTIONS: 'suppressions=${{ github.workspace }}/asan_3rd_party_leaks'
      CXX: '${{ matrix.compiler }}'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Restore executable from cache
      id: cache
      uses: actions/cache/restore@v4
      with:
        path: widelands
        key: widelands-exe-${{ matrix.compiler }}-${{ matrix.config }}-${{ github.sha }}
        restore-keys: |
          widelands-exe-${{ matrix.compiler }}-${{ matrix.config }}-
    - name: Installing dependencies
      run: sh ./.github/scripts/install_deps.sh
    - name: Check cache restore
      # cache-hit is only true on exact match...
      run: |
        if [ -x widelands ] then
          echo "cache_restored=true" >> "$GITHUB_ENV"
        else
          echo "cache_restored=false" >> "$GITHUB_ENV"
        fi
    - name: Compile
      id: compile
      if: ${{ env.cache_restored != 'true' }}
      run: |
        if [ "${CXX:0:1}" == "c" ]
        then
          export CC="/usr/bin/${{ matrix.compiler }}"  # clang-10
          export CXX="${CC/clang/clang++}"             # clang++-10
        else
          export CXX="/usr/bin/${{ matrix.compiler }}" # g++-10
          export CC="${CXX/g++/gcc}"                   # gcc-10
        fi
        mkdir build
        pushd build
        cmake .. -DCMAKE_BUILD_TYPE:STRING="${{ matrix.config }}" -DOPTION_BUILD_TRANSLATIONS="ON" -DOPTION_BUILD_WEBSITE_TOOLS="ON" -DOPTION_ASAN="ON" -DOPTION_BUILD_CODECHECK="OFF"
        grep -v REVDETECT-BROKEN VERSION
        make -k -j$(nproc) VERBOSE=1
        mv src/widelands ..
    - name: Cache built executable
      if: ${{ steps.compile.outcome == 'success' }}
      uses: actions/cache/save@v4
      with:
        path: widelands
        key: widelands-exe-${{ matrix.compiler }}-${{ matrix.config }}-${{ github.sha }}
    - name: Make install/uninstall
      if: false
      run: |
        cd build
        TEST_INSTALL_DIR="${PWD}/test_install"
        make -j$(nproc) DESTDIR=${TEST_INSTALL_DIR} install
        make -j$(nproc) DESTDIR=${TEST_INSTALL_DIR} uninstall
        test ! -d ${TEST_INSTALL_DIR}
    - name: Website Binaries
      if: false
      run: |
        /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 800x600x24 -ac +extension GLX
        sleep 1m
        # Ignore transient SDL errors (exit code 2)
        mkdir temp_web
        build/src/website/wl_map_object_info temp_web || [ $? -eq 2 ]
        build/src/website/wl_map_info data/maps/Archipelago_Sea.wmf || [ $? -eq 2 ]
    - name: Testsuite
      run: |
        # regression_test.py
        /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 800x600x24 -ac +extension GLX
        sleep 1m
        TIMEOUT=""
        if [ "${{ matrix.config }}" = "Debug" ]
        then
          TIMEOUT="-t 20"
        fi
        # ./regression_test.py -b build/src/widelands $TIMEOUT -r stress
        ./regression_test.py $TIMEOUT -r stress
